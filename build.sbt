import play.sbt.routes.RoutesKeys
import play.sbt.PlayImport.PlayKeys
import sbt.Keys.*
import sbt.*
import uk.gov.hmrc.DefaultBuildSettings.*

lazy val appName: String = "pension-administrator-frontend"

lazy val root = (project in file("."))
  .disablePlugins(JUnitXmlReportPlugin)
  .enablePlugins(play.sbt.PlayScala, SbtDistributablesPlugin)
  .settings(scalaSettings *)
  .settings(defaultSettings() *)
  .settings(inConfig(Test)(testSettings) *)
  .settings(
    scalaVersion := "3.6.2",
    majorVersion := 0,
    name := appName,
    PlayKeys.playDefaultPort := 8201,
    libraryDependencies ++= AppDependencies(),
    retrieveManaged := true,
    ScoverageSettings.apply
  )
  .settings(
    scalacOptions ++= Seq(
      "-feature",
      "-Wconf:src=routes/.*:silent", // Suppress warnings from routes files
      "-Wconf:src=twirl/.*:silent", // Suppress warnings from twirl files
      "-Wconf:src=target/.*:silent", // Suppress warnings from target files
      "-Wconf:msg=Flag.*repeatedly:silent", // Suppress repeated flag warnings
    )
  )
  .settings(
    RoutesKeys.routesImport ++= Seq(
      "models.Mode",
      "models.CheckMode",
      "models.NormalMode",
      "models.UpdateMode",
      "models.Index",
      "models.register._"
    ),
    TwirlKeys.templateImports ++= Seq(
      "play.twirl.api.HtmlFormat",
      "play.twirl.api.HtmlFormat._",
      "uk.gov.hmrc.govukfrontend.views.html.components._",
      "uk.gov.hmrc.hmrcfrontend.views.html.components._",
      "uk.gov.hmrc.hmrcfrontend.views.html.helpers._"
    )
  )
  .settings(
    // concatenate js
    Concat.groups := Seq(
      "javascripts/pensionadministratorfrontend-app.js" -> group(Seq(
        "javascripts/location-autocomplete.min.js",
        "javascripts/pensionadministratorfrontend.js"
      ))),
    // prevent removal of unused code which generates warning errors due to use of third-party libs
    uglifyCompressOptions := Seq("unused=false", "dead_code=false"),
    pipelineStages := Seq(digest),
    // below line required to force asset pipeline to operate in dev rather than only prod
    // Removed uglify due to node 20 compile issues.
    // Suspected cause minification of already minified location-autocomplete.min.js -Pavel Vjalicin
    Assets / pipelineStages := Seq(concat),
    // only compress files generated by concat
    uglify / includeFilter := GlobFilter("pensionadministratorfrontend-*.js")
  )
  .settings(
    Test / parallelExecution := true
  )

lazy val testSettings: Seq[Def.Setting[?]] = Seq(
  fork := true,
  javaOptions ++= Seq("-Dconfig.resource=test.application.conf")
)
